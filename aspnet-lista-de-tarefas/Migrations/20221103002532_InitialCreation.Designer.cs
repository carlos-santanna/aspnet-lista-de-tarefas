// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspnet_lista_de_tarefas.Data;

namespace aspnet_lista_de_tarefas.Migrations
{
    [DbContext(typeof(ListaTarefasDbContext))]
    [Migration("20221103002532_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("aspnet_lista_de_tarefas.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Nome = "A fazer"
                        },
                        new
                        {
                            StatusId = 2,
                            Nome = "Fazendo"
                        },
                        new
                        {
                            StatusId = 3,
                            Nome = "Feito"
                        });
                });

            modelBuilder.Entity("aspnet_lista_de_tarefas.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataExecucao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTarefaId")
                        .HasColumnType("int");

                    b.HasKey("TarefaId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipoTarefaId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("aspnet_lista_de_tarefas.Models.TipoTarefa", b =>
                {
                    b.Property<int>("TipoTarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoTarefaId");

                    b.ToTable("TiposTarefas");

                    b.HasData(
                        new
                        {
                            TipoTarefaId = 1,
                            Tipo = "Trabalho"
                        },
                        new
                        {
                            TipoTarefaId = 2,
                            Tipo = "Faculdade"
                        },
                        new
                        {
                            TipoTarefaId = 3,
                            Tipo = "Estudo"
                        },
                        new
                        {
                            TipoTarefaId = 4,
                            Tipo = "Pessoal"
                        });
                });

            modelBuilder.Entity("aspnet_lista_de_tarefas.Models.Tarefa", b =>
                {
                    b.HasOne("aspnet_lista_de_tarefas.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspnet_lista_de_tarefas.Models.TipoTarefa", "TipoTarefa")
                        .WithMany()
                        .HasForeignKey("TipoTarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
